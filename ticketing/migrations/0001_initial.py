# Generated by Django 4.1.6 on 2023-02-08 07:53

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ticketing.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ticket_admin', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BoatBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pnr', models.CharField(default=ticketing.models.generate_pnr, editable=False, max_length=100, verbose_name='PNR Number')),
                ('booking_duration', models.IntegerField(default=None, verbose_name='Booking Durtion (Minuts)')),
                ('booking_start_timestamp', models.CharField(default=None, max_length=100, verbose_name='Booking Start Timestamp')),
                ('booking_end_timestamp', models.CharField(default=None, max_length=100, verbose_name='Booking End Timestamp')),
                ('pax_count', models.IntegerField(default=None, verbose_name='PAX Count')),
                ('vehicle_count', models.IntegerField(default=None, null=True, verbose_name='Vehicle Count')),
                ('pet_count', models.IntegerField(default=None, null=True, verbose_name='Pet Count')),
                ('vas_count', models.IntegerField(default=None, verbose_name='Value Added Service Count')),
                ('coupon_code', models.CharField(default=None, max_length=100, verbose_name='Coupon Code')),
                ('total_fare', models.IntegerField(default=None, verbose_name='Total Fare')),
                ('tax', models.IntegerField(default=None, verbose_name='Tax Applied')),
                ('cess', models.IntegerField(default=None, verbose_name='Cess Applied')),
                ('port_levy', models.IntegerField(default=None, verbose_name='Port Levy Applied')),
                ('gst_number', models.CharField(default=None, max_length=100, null=True, verbose_name='GST Number (if applicable)')),
                ('discount_percentage', models.IntegerField(default=None, verbose_name='Discount %')),
                ('discount_amount', models.IntegerField(default=None, verbose_name='Discount Amount')),
                ('payable_amount', models.IntegerField(default=None, verbose_name='Payable Amount')),
                ('bank_transection_id', models.CharField(default=None, editable=False, max_length=100, verbose_name='Bank Transection ID')),
                ('payment_success', models.BooleanField(default=False, editable=False, verbose_name='Payment Success')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='boat_booking_trip', to='ticket_admin.trip')),
            ],
            options={
                'verbose_name': 'Boat Booking',
                'verbose_name_plural': 'Boat Bookings',
            },
        ),
        migrations.CreateModel(
            name='ParcelBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_id', models.CharField(default=ticketing.models.generate_pnr, editable=False, max_length=100, verbose_name='Tracking ID')),
                ('sender_name', models.CharField(default=None, max_length=100, verbose_name='Sender Name')),
                ('sender_email', models.EmailField(default=None, max_length=254, verbose_name='Sender Email')),
                ('sender_mobile', models.CharField(default=None, max_length=100, verbose_name='Sender Mobile')),
                ('receiver_name', models.CharField(default=None, max_length=100, verbose_name='Receiver Name')),
                ('receiver_email', models.EmailField(default=None, max_length=254, verbose_name='Receiver Email')),
                ('receiver_mobile', models.CharField(default=None, max_length=100, verbose_name='Receiver Mobile')),
                ('gst_number', models.CharField(default=None, max_length=100, null=True, verbose_name='GST Number (if applicable)')),
                ('discount_percentage', models.IntegerField(default=None, verbose_name='Discount %')),
                ('discount_amount', models.IntegerField(default=None, verbose_name='Discount Amount')),
                ('amount_payable', models.IntegerField(default=None, verbose_name='Amount Payable')),
                ('bank_transection_id', models.CharField(default=None, editable=False, max_length=100, verbose_name='Bank Transection ID')),
                ('payment_success', models.BooleanField(default=False, editable=False, verbose_name='Payment Success')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='parcel_route', to='ticket_admin.route')),
            ],
            options={
                'verbose_name': 'Parcel Booking',
                'verbose_name_plural': 'Parcel Bookings',
            },
        ),
        migrations.CreateModel(
            name='PassBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pass_number', models.CharField(default=ticketing.models.generate_pnr, editable=False, max_length=100, verbose_name='Pass Number')),
                ('pax_count', models.IntegerField(default=None, verbose_name='PAX Count')),
                ('vehicle_count', models.IntegerField(default=None, null=True, verbose_name='Vehicle Count')),
                ('pet_count', models.IntegerField(default=None, null=True, verbose_name='Pet Count')),
                ('trips_allowed', models.IntegerField(default=None, verbose_name='Trips Allowed')),
                ('validity_days', models.IntegerField(default=None, verbose_name='Validity')),
                ('pass_start_timestamp', models.DateTimeField(default=datetime.datetime.now, verbose_name='Pass Start Timestamp')),
                ('pass_expiry_timestamp', models.DateTimeField(default=datetime.datetime.now, verbose_name='Pass Expiry Timestamp')),
                ('coupon_code', models.CharField(default=None, max_length=100, verbose_name='Coupon Code')),
                ('total_fare', models.IntegerField(default=None, verbose_name='Total Fare')),
                ('tax', models.IntegerField(default=None, verbose_name='Tax applied')),
                ('gst_number', models.CharField(default=None, max_length=100, null=True, verbose_name='GST Number (if applicable)')),
                ('discount_percentage', models.IntegerField(default=None, verbose_name='Discount %')),
                ('discount_amount', models.IntegerField(default=None, verbose_name='Discount Amount')),
                ('payable_amount', models.IntegerField(default=None, verbose_name='Payable Amount')),
                ('bank_transection_id', models.CharField(default=None, editable=False, max_length=100, verbose_name='Bank Transection ID')),
                ('payment_success', models.BooleanField(default=False, editable=False, verbose_name='Payment Success')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='pass_route', to='ticket_admin.route')),
            ],
            options={
                'verbose_name': 'Pass Booking',
                'verbose_name_plural': 'Pass Bookings',
            },
        ),
        migrations.CreateModel(
            name='TicketBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pnr', models.CharField(default=ticketing.models.generate_pnr, editable=False, max_length=10, unique=True, verbose_name='PNR Number')),
                ('pax_count', models.IntegerField(default=None, verbose_name='PAX Count')),
                ('vehicle_count', models.IntegerField(default=None, null=True, verbose_name='Vehicle Count')),
                ('pet_count', models.IntegerField(default=None, null=True, verbose_name='Pet Count')),
                ('deck_type', models.CharField(choices=[('LOWER', 'LOWER'), ('UPPER', 'UPPER')], default='LOWER', max_length=100, verbose_name='Lower Deck/Upper Deck')),
                ('vas_count', models.IntegerField(default=None, verbose_name='Value Added Service Count')),
                ('coupon_code', models.CharField(default=None, max_length=100, verbose_name='Coupon Code')),
                ('pass_number', models.CharField(default=None, max_length=100, verbose_name='Pass Number')),
                ('total_fare', models.IntegerField(default=None, verbose_name='Total Fare')),
                ('tax', models.IntegerField(default=None, verbose_name='Tax Applied')),
                ('cess', models.IntegerField(default=None, verbose_name='Cess Applied')),
                ('port_levy', models.IntegerField(default=None, verbose_name='Port Levy Applied')),
                ('gst_number', models.CharField(default=None, max_length=100, null=True, verbose_name='GST Number (if applicable)')),
                ('discount_percentage', models.IntegerField(default=None, verbose_name='Discount %')),
                ('discount_amount', models.IntegerField(default=None, verbose_name='Discount Amount')),
                ('payable_amount', models.IntegerField(default=None, verbose_name='Payable Amount')),
                ('bank_transection_id', models.CharField(default=None, editable=False, max_length=100, verbose_name='Bank Transection ID')),
                ('payment_success', models.BooleanField(default=False, editable=False, verbose_name='Payment Success')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ticket Booking',
                'verbose_name_plural': 'Ticket Bookings',
            },
        ),
        migrations.CreateModel(
            name='TicketVehicleInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default=None, max_length=100, null=True, verbose_name='Vehicle Type')),
                ('model', models.CharField(default=None, max_length=100, null=True, verbose_name='Vehicle Model')),
                ('registration_number', models.CharField(default=None, max_length=100, null=True, verbose_name='Vehicle Registration number')),
                ('price', models.CharField(default=None, max_length=100, null=True, verbose_name='Price')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('ticket_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_vehicle_info', to='ticketing.ticketbooking')),
            ],
            options={
                'verbose_name': 'Ticket Vehicle Info',
                'verbose_name_plural': 'Ticket Vehicles Info',
            },
        ),
        migrations.CreateModel(
            name='TicketVASInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100, null=True, verbose_name='Service Name')),
                ('type', models.CharField(default=None, max_length=100, null=True, verbose_name='Service Type')),
                ('price', models.CharField(default=None, max_length=100, null=True, verbose_name='Price')),
                ('tax', models.CharField(default=None, max_length=100, null=True, verbose_name='Service Tax')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('ticket_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_vas_info', to='ticketing.ticketbooking')),
            ],
            options={
                'verbose_name': 'Ticket Value Added Service Info',
                'verbose_name_plural': 'Ticket Value Added Services Info',
            },
        ),
        migrations.CreateModel(
            name='TicketTripInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('ticket_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_trip_info', to='ticketing.ticketbooking')),
                ('trip', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='ticket_booking_trip', to='ticket_admin.trip')),
            ],
            options={
                'verbose_name': 'Ticket Trip Info',
                'verbose_name_plural': 'Ticket Trips Info',
            },
        ),
        migrations.CreateModel(
            name='TicketPetInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100, null=True, verbose_name='Pet Name')),
                ('type', models.CharField(default=None, max_length=100, null=True, verbose_name='Pet Type')),
                ('weight', models.CharField(default=None, max_length=100, null=True, verbose_name='Pet Weight')),
                ('price', models.CharField(default=None, max_length=100, null=True, verbose_name='Price')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('ticket_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_pet_info', to='ticketing.ticketbooking')),
            ],
            options={
                'verbose_name': 'Ticket Pet Info',
                'verbose_name_plural': 'Ticket Pets Info',
            },
        ),
        migrations.CreateModel(
            name='TicketCustomerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100, verbose_name='Customer Name')),
                ('mobile', models.CharField(default=None, max_length=100, verbose_name='Customer Mobile')),
                ('email', models.EmailField(default=None, max_length=254, verbose_name='Customer Email')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('ticket_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_customer_info', to='ticketing.ticketbooking')),
            ],
            options={
                'verbose_name': 'Ticket Customer Info',
                'verbose_name_plural': 'Ticket Customers Info',
            },
        ),
        migrations.CreateModel(
            name='PassVehicleInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(default=None, max_length=100, null=True, verbose_name='Vehicle Model')),
                ('type', models.CharField(default=None, max_length=100, null=True, verbose_name='Vehicle Type')),
                ('registration_number', models.CharField(default=None, max_length=100, null=True, verbose_name='Vehicle Registration number')),
                ('price', models.CharField(default=None, max_length=100, null=True, verbose_name='Price')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pass_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='pass_vehicle_info', to='ticketing.passbooking')),
            ],
            options={
                'verbose_name': 'Pass Vehicle Info',
                'verbose_name_plural': 'Pass Vehicles Info',
            },
        ),
        migrations.CreateModel(
            name='PassPetInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100, null=True, verbose_name='Pet Name')),
                ('type', models.CharField(default=None, max_length=100, null=True, verbose_name='Pet Type')),
                ('weight', models.CharField(default=None, max_length=100, null=True, verbose_name='Pet Weight')),
                ('price', models.CharField(default=None, max_length=100, null=True, verbose_name='Price')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pass_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='pass_pet_info', to='ticketing.passbooking')),
            ],
            options={
                'verbose_name': 'Pass Pet Info',
                'verbose_name_plural': 'Pass Pets Info',
            },
        ),
        migrations.CreateModel(
            name='PassCustomerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100, null=True, verbose_name='Customer Name')),
                ('mobile', models.CharField(default=None, max_length=100, null=True, verbose_name='Customer Mobile')),
                ('email', models.EmailField(default=None, max_length=254, null=True, verbose_name='Customer Email')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pass_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='pass_customer_info', to='ticketing.passbooking')),
            ],
            options={
                'verbose_name': 'Pass Customer Info',
                'verbose_name_plural': 'Pass Customers Info',
            },
        ),
        migrations.CreateModel(
            name='ParcelInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default=None, max_length=100, verbose_name='Parcel Type')),
                ('weight', models.CharField(default=None, max_length=100, verbose_name='Parcel Weight')),
                ('quantity', models.IntegerField(default=None, verbose_name='Parcel Quantity')),
                ('price', models.IntegerField(default=None, verbose_name='Parcel Price')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parcel', models.ForeignKey(default=None, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='parcel_info', to='ticketing.parcelbooking')),
            ],
            options={
                'verbose_name': 'Parcel Info',
                'verbose_name_plural': 'Parcels Info',
            },
        ),
        migrations.CreateModel(
            name='BoatVehicleInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default=None, max_length=100, null=True, verbose_name='Vehicle Type')),
                ('model', models.CharField(default=None, max_length=100, null=True, verbose_name='Vehicle Model')),
                ('registration_number', models.CharField(default=None, max_length=100, null=True, verbose_name='Vehicle Registration number')),
                ('price', models.CharField(default=None, max_length=100, null=True, verbose_name='Price')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('boat_booking_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='boat_vehicle_info', to='ticketing.boatbooking')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Boat Vehicle Info',
                'verbose_name_plural': 'Boat Vehicles Info',
            },
        ),
        migrations.CreateModel(
            name='BoatVASInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100, null=True, verbose_name='Service Name')),
                ('type', models.CharField(default=None, max_length=100, null=True, verbose_name='Service Type')),
                ('price', models.CharField(default=None, max_length=100, null=True, verbose_name='Price')),
                ('tax', models.CharField(default=None, max_length=100, null=True, verbose_name='Service Tax')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('boat_booking_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='boat_vas_info', to='ticketing.boatbooking')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Boat Value Added Service Info',
                'verbose_name_plural': 'Boat Value Added Services Info',
            },
        ),
        migrations.CreateModel(
            name='BoatPetInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100, null=True, verbose_name='Pet Name')),
                ('type', models.CharField(default=None, max_length=100, null=True, verbose_name='Pet Type')),
                ('weight', models.CharField(default=None, max_length=100, null=True, verbose_name='Pet Weight')),
                ('price', models.CharField(default=None, max_length=100, null=True, verbose_name='Price')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('boat_booking_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='boat_pet_info', to='ticketing.boatbooking')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Boat Pet Info',
                'verbose_name_plural': 'Boat Pets Info',
            },
        ),
        migrations.CreateModel(
            name='BoatCustomerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100, null=True, verbose_name='Customer Name')),
                ('mobile', models.CharField(default=None, max_length=100, null=True, verbose_name='Customer Mobile')),
                ('email', models.EmailField(default=None, max_length=254, null=True, verbose_name='Customer Email')),
                ('created_on', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('status', models.BooleanField(default=1, editable=False)),
                ('boat_booking_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='boat_customer_info', to='ticketing.boatbooking')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Boat Customer Info',
                'verbose_name_plural': 'Boat Customers Info',
            },
        ),
    ]
